"""
–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ "–õ–∏—á–Ω—ã–π –¢–∞—Ä–æ–ª–æ–≥ ‚ú®üîÆ‚ú®"
"""
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from src.config import load_config
from src.keyboards import main_menu
from src.handlers import handle_callback, handle_text_message
from src.user_manager import init_storage


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    """
    try:
        welcome_message = (
            "üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¢–∞—Ä–æ!\n\n"
            "–Ø –≤–∞—à –ª–∏—á–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥, –≥–æ—Ç–æ–≤—ã–π –ø—Ä–∏–æ—Ç–∫—Ä—ã—Ç—å –∑–∞–≤–µ—Å—É –±—É–¥—É—â–µ–≥–æ.\n\n"
            "‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        await update.message.reply_text(
            text=welcome_message,
            reply_markup=main_menu()
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start_command: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    """
    try:
        help_message = (
            "üìñ **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**\n\n"
            "üîÆ –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ 7 —Ç–∏–ø–æ–≤ —Ä–∞—Å–∫–ª–∞–¥–æ–≤ —Ç–∞—Ä–æ\n"
            "‚ú® –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏\n"
            "üéØ –í–≤–µ–¥–∏—Ç–µ –º–∞–≥–∏—á–µ—Å–∫–æ–µ —á–∏—Å–ª–æ (–ª—é–±–æ–µ –æ—Ç 1 –¥–æ 999)\n"
            "üé¥ –ü–æ–ª—É—á–∏—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥ —Å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π\n\n"
            "üí° **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
            "‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        await update.message.reply_text(
            text=help_message,
            reply_markup=main_menu(),
            parse_mode='Markdown'
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /help")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ help_command: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π handle_message - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ handle_text_message –∏–∑ handlers.py


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –±–æ—Ç–µ
    """
    error_str = str(context.error)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–º polling
    if "Conflict: terminated by other getUpdates request" in error_str:
        logger.warning("–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç getUpdates - –¥—Ä—É–≥–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω")
        return
    
    # –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏ - –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∫ warning, –Ω–µ –∫–∞–∫ error
    if any(network_error in error_str.lower() for network_error in [
        "nodename nor servname provided", "server disconnected", 
        "connection", "timeout", "network", "connect"
    ]):
        logger.warning(f"–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ): {context.error}")
        return
    
    # –û—à–∏–±–∫–∏ Telegram API - –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∫ info  
    if any(tg_error in error_str.lower() for tg_error in [
        "message to delete not found", "message is not modified", 
        "bad request", "forbidden"
    ]):
        logger.info(f"Telegram API —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {context.error}")
        return
    
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∫ error
    logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update}:", exc_info=context.error)


def run_bot(config=None):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
    
    :param config: –°–ª–æ–≤–∞—Ä—å —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π. –ï—Å–ª–∏ None, –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç:
    - –ó–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞)
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Application (python-telegram-bot)
    - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    - –ó–∞–ø—É—Å–∫ polling
    """
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞
        if config is None:
            print("üîß –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
            config = load_config()
        else:
            print("üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        storage_success = init_storage()
        if not storage_success:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
            return
        else:
            print("‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤–æ")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        print("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞...")
        application = (Application.builder()
            .token(config['telegram_bot_token'])
            .read_timeout(30)
            .write_timeout(30)
            .connect_timeout(30)
            .pool_timeout(30)
            .get_updates_read_timeout(30)
            .get_updates_write_timeout(30)
            .get_updates_connect_timeout(30)
            .get_updates_pool_timeout(30)
            .build())
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        print("üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...")
        
        # –ö–æ–º–∞–Ω–¥–∞ /start
        application.add_handler(CommandHandler("start", start_command))
        
        # –ö–æ–º–∞–Ω–¥–∞ /help
        application.add_handler(CommandHandler("help", help_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫
        application.add_handler(CallbackQueryHandler(handle_callback))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥) - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ—à–∞–≥–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        application.add_error_handler(error_handler)
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_username = config.get('bot_username', 'Unknown')
        print(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ {bot_username}...")
        print("üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏")
        print("   /help - –°–ø—Ä–∞–≤–∫–∞ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
        print("   ‚Ä¢ –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏–∑ 7 —Ä–∞—Å–∫–ª–∞–¥–æ–≤ —Ç–∞—Ä–æ")
        print("   ‚Ä¢ –ü–æ—à–∞–≥–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º—è, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è)")
        print("   ‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("   ‚Ä¢ Inline-–Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏")
        print("   ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É")
        print("üíæ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ data/users.json")
        print("‚ö° –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤...")
        application.run_polling(
            allowed_updates=Update.ALL_TYPES,
            drop_pending_updates=True,  # –û—á–∏—â–∞–µ–º pending –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            poll_interval=2.0,          # –£–≤–µ–ª–∏—á–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª polling –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            timeout=20,                 # –£–≤–µ–ª–∏—á–µ–Ω timeout –¥–ª—è getUpdates  
            bootstrap_retries=5         # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        )
        
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        print("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise