"""
–ü—Ä–æ—Å—Ç–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –≤ –ø–∞–º—è—Ç–∏
–•—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
"""
from typing import Dict, Any, Optional
import logging
from datetime import datetime, timedelta

logger = logging.getLogger(__name__)

# –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserState:
    """–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    IDLE = "IDLE"                           # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    WAITING_NAME = "WAITING_NAME"           # –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    WAITING_BIRTHDATE = "WAITING_BIRTHDATE" # –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    WAITING_MAGIC_NUMBER = "WAITING_MAGIC_NUMBER"  # –û–∂–∏–¥–∞–µ–º –º–∞–≥–∏—á–µ—Å–∫–æ–µ —á–∏—Å–ª–æ
    WAITING_PRELIMINARY_ANSWERS = "WAITING_PRELIMINARY_ANSWERS"  # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    WAITING_LLM_QUESTIONS = "WAITING_LLM_QUESTIONS"  # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ LLM –≤–æ–ø—Ä–æ—Å—ã
    PROCESSING_INTERPRETATION = "PROCESSING_INTERPRETATION"  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é
    WAITING_FEEDBACK = "WAITING_FEEDBACK"   # –û–∂–∏–¥–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    WAITING_COMMENT = "WAITING_COMMENT"     # –û–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {chat_id: {'state': str, 'data': dict, 'timestamp': datetime}}
_user_states: Dict[int, Dict[str, Any]] = {}


def set_state(chat_id: int, state: str, data: Optional[Dict[str, Any]] = None) -> None:
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param state: –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∏–∑ –∫–ª–∞—Å—Å–∞ UserState)
    :param data: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> set_state(123456, UserState.WAITING_NAME)
    >>> set_state(123456, UserState.WAITING_BIRTHDATE, {'name': '–ê–Ω–Ω–∞'})
    >>> set_state(123456, UserState.IDLE, {'spread_type': 'celtic_cross'})
    """
    if chat_id not in _user_states:
        _user_states[chat_id] = {'state': UserState.IDLE, 'data': {}}
    
    _user_states[chat_id]['state'] = state
    
    if data:
        _user_states[chat_id]['data'].update(data)
    
    # –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    _user_states[chat_id]['timestamp'] = datetime.now()
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id}: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {state}")


def get_state(chat_id: int) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é IDLE)
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> get_state(123456)
    'WAITING_NAME'
    >>> get_state(999999)  # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    'IDLE'
    """
    if chat_id not in _user_states:
        # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _user_states[chat_id] = {
            'state': UserState.IDLE,
            'data': {},
            'timestamp': datetime.now()
        }
    
    return _user_states[chat_id]['state']


def get_user_data(chat_id: int) -> Dict[str, Any]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> get_user_data(123456)
    {'name': '–ê–Ω–Ω–∞', 'birthdate': '1990-03-15', 'age': 34}
    >>> get_user_data(999999)  # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    {}
    """
    if chat_id not in _user_states:
        _user_states[chat_id] = {
            'state': UserState.IDLE,
            'data': {},
            'timestamp': datetime.now()
        }
    
    return _user_states[chat_id]['data'].copy()


def update_data(chat_id: int, key: str, value: Any) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param key: –ö–ª—é—á –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    :param value: –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> update_data(123456, 'name', '–ê–Ω–Ω–∞')
    >>> update_data(123456, 'birthdate', '1990-03-15')
    >>> update_data(123456, 'spread_type', 'celtic_cross')
    >>> update_data(123456, 'magic_number', 777)
    """
    if chat_id not in _user_states:
        _user_states[chat_id] = {
            'state': UserState.IDLE,
            'data': {},
            'timestamp': datetime.now()
        }
    
    _user_states[chat_id]['data'][key] = value
    
    # –û–±–Ω–æ–≤–ª—è–µ–º timestamp
    _user_states[chat_id]['timestamp'] = datetime.now()
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id}: –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ {key} = {value}")


def clear_state(chat_id: int) -> None:
    """
    –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> clear_state(123456)  # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    """
    if chat_id in _user_states:
        del _user_states[chat_id]
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id}: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ")


def reset_to_idle(chat_id: int, keep_data: bool = False) -> None:
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ IDLE
    
    :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param keep_data: –ï—Å–ª–∏ True, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    >>> reset_to_idle(123456)  # –°–±—Ä–æ—Å —Å –æ—á–∏—Å—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
    >>> reset_to_idle(123456, keep_data=True)  # –°–±—Ä–æ—Å —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    """
    if keep_data:
        data = get_user_data(chat_id)
        set_state(chat_id, UserState.IDLE, data)
    else:
        set_state(chat_id, UserState.IDLE, {})


def get_all_states() -> Dict[int, Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    
    :return: –°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:
    >>> states = get_all_states()
    >>> print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(states)}")
    """
    return _user_states.copy()


def cleanup_old_states(max_age_hours: int = 24) -> int:
    """
    –û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    
    :param max_age_hours: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —á–∞—Å–∞—Ö
    :return: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏:
    >>> cleanup_old_states(24)  # –£–¥–∞–ª–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
    3
    """
    cutoff_time = datetime.now() - timedelta(hours=max_age_hours)
    old_chat_ids = []
    
    for chat_id, state_data in _user_states.items():
        if 'timestamp' in state_data and state_data['timestamp'] < cutoff_time:
            old_chat_ids.append(chat_id)
    
    for chat_id in old_chat_ids:
        del _user_states[chat_id]
    
    if old_chat_ids:
        logger.info(f"–û—á–∏—â–µ–Ω–æ {len(old_chat_ids)} —Å—Ç–∞—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π")
    
    return len(old_chat_ids)


# –°–ª—É–∂–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def _test_state_manager():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π...")
    print("=" * 50)
    
    test_chat_id = 123456
    
    # –¢–µ—Å—Ç 1: –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    state = get_state(test_chat_id)
    print(f"   –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    assert state == UserState.IDLE, f"–û–∂–∏–¥–∞–ª–∏ IDLE, –ø–æ–ª—É—á–∏–ª–∏ {state}"
    print("   ‚úÖ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –¢–µ—Å—Ç 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è:")
    set_state(test_chat_id, UserState.WAITING_NAME)
    state = get_state(test_chat_id)
    print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {state}")
    assert state == UserState.WAITING_NAME
    print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:")
    update_data(test_chat_id, 'name', '–ê–Ω–Ω–∞')
    update_data(test_chat_id, 'age', 25)
    data = get_user_data(test_chat_id)
    print(f"   –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data}")
    assert data['name'] == '–ê–Ω–Ω–∞'
    assert data['age'] == 25
    print("   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏:")
    set_state(test_chat_id, UserState.WAITING_BIRTHDATE, {'spread_type': 'celtic'})
    state = get_state(test_chat_id)
    data = get_user_data(test_chat_id)
    print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    print(f"   –î–∞–Ω–Ω—ã–µ: {data}")
    assert state == UserState.WAITING_BIRTHDATE
    assert 'spread_type' in data
    assert 'name' in data  # –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 5: –°–±—Ä–æ—Å –≤ IDLE —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±—Ä–æ—Å –≤ IDLE:")
    reset_to_idle(test_chat_id, keep_data=True)
    state = get_state(test_chat_id)
    data = get_user_data(test_chat_id)
    print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: {state}")
    print(f"   –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: {data}")
    assert state == UserState.IDLE
    assert len(data) > 0  # –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    print("   ‚úÖ –°–±—Ä–æ—Å —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 6: –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É:")
    clear_state(test_chat_id)
    state = get_state(test_chat_id)  # –î–æ–ª–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    data = get_user_data(test_chat_id)
    print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {state}")
    print(f"   –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {data}")
    assert state == UserState.IDLE
    assert len(data) == 0
    print("   ‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 7: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    print("\n7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    set_state(111111, UserState.WAITING_NAME, {'test': 'user1'})
    set_state(222222, UserState.WAITING_BIRTHDATE, {'test': 'user2'})
    
    all_states = get_all_states()
    print(f"   –í—Å–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π: {len(all_states)}")
    assert len(all_states) >= 2
    print("   ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    print("=" * 50)
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    clear_state(test_chat_id)
    clear_state(111111)
    clear_state(222222)


if __name__ == "__main__":
    _test_state_manager()
