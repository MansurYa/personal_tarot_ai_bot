"""
Конфигурации раскладов Таро на основе исследования схем
"""
import math
from typing import List, Dict, Tuple


def calculate_circular_positions(
    count: int, 
    radius: int, 
    center_x: int = 256, 
    center_y: int = 256,
    start_angle: float = -90  # Начинаем с "12 часов"
) -> List[Dict]:
    """
    Расчёт позиций карт по кругу для круговых раскладов
    
    :param count: Количество карт
    :param radius: Радиус окружности
    :param center_x: X координата центра в рабочей области
    :param center_y: Y координата центра в рабочей области
    :param start_angle: Начальный угол в градусах (-90 = верх)
    :return: Список позиций с координатами
    """
    positions = []
    angle_step = 360.0 / count  # Угол между соседними картами
    
    for i in range(count):
        angle_degrees = start_angle + i * angle_step
        angle_radians = math.radians(angle_degrees)
        
        x = center_x + int(radius * math.cos(angle_radians))
        y = center_y + int(radius * math.sin(angle_radians))
        
        positions.append({
            'x': x,
            'y': y,
            'rotation': 0  # Все карты без поворота для читаемости
        })
    
    return positions


# Конфигурации всех раскладов на основе исследования
SPREAD_CONFIGS = {
    'single_card': {
        'name': 'На одну карту',
        'description': 'Быстрый ответ на конкретный вопрос',
        'card_count': 1,
        'background_id': 1,
        'scale': 0.6,  # Крупная карта для одиночного расклада
        'positions': [
            {'x': 256, 'y': 256, 'rotation': 0}  # Строго по центру
        ],
        'card_meanings': [
            'Ответ на ваш вопрос'
        ]
    },
    
    'three_cards': {
        'name': 'На три карты',
        'description': 'Прошлое - Настоящее - Будущее',
        'card_count': 3,
        'background_id': 2,
        'scale': 0.38,  # Немного уменьшили для лучшего разделения
        'positions': [
            {'x': 115, 'y': 256, 'rotation': 0},  # Прошлое (слева)
            {'x': 256, 'y': 256, 'rotation': 0},  # Настоящее (центр)
            {'x': 397, 'y': 256, 'rotation': 0},  # Будущее (справа)
        ],
        'card_meanings': [
            'Прошлое - что привело к ситуации',
            'Настоящее - текущее состояние дел',
            'Будущее - вероятное развитие событий'
        ]
    },
    
    'celtic_cross': {
        'name': 'Кельтский крест',
        'description': 'Глубокий анализ ситуации (10 карт)',
        'card_count': 10,
        'background_id': 5,
        'scale': 0.17,  # Уменьшили для максимального разделения
        'positions': [
            # Основной крест (карты 1-6) - центрированный с большими расстояниями
            {'x': 200, 'y': 256, 'rotation': 0},    # 1. Основа ситуации (центр, смещен влево)
            {'x': 200, 'y': 256, 'rotation': 90},   # 2. Влияние/препятствие (поверх №1, повёрнута)
            {'x': 200, 'y': 140, 'rotation': 0},    # 3. Внешние обстоятельства (сверху, больше расстояние)
            {'x': 320, 'y': 256, 'rotation': 0},    # 4. Ближайшее будущее (справа, больше расстояние)
            {'x': 200, 'y': 372, 'rotation': 0},    # 5. Подсознание (снизу, больше расстояние)
            {'x': 80, 'y': 256, 'rotation': 0},     # 6. Недавнее прошлое (слева, больше расстояние)
            
            # Башня справа (карты 7-10) - увеличенные интервалы и смещение влево
            {'x': 400, 'y': 380, 'rotation': 0},    # 7. Ваш подход (снизу башни, смещен влево)
            {'x': 400, 'y': 290, 'rotation': 0},    # 8. Внешние влияния (больший интервал)
            {'x': 400, 'y': 200, 'rotation': 0},    # 9. Надежды и страхи (больший интервал)
            {'x': 400, 'y': 110, 'rotation': 0},    # 10. Итог/результат (верх башни, больший интервал)
        ],
        'card_meanings': [
            'Основа ситуации - суть проблемы',
            'Влияние/Препятствие - что воздействует', 
            'Внешние обстоятельства - неучтённые факторы',
            'Ближайшее будущее - к чему движется',
            'Подсознание - скрытые мотивы и чувства',
            'Недавнее прошлое - что привело сюда',
            'Ваш подход - как вы влияете',
            'Внешние влияния - окружение',
            'Надежды и страхи - ваши ожидания',
            'Итог - финальный результат'
        ]
    },
    
    'horseshoe': {
        'name': 'Подкова',
        'description': 'Удача и препятствия (7 карт)',
        'card_count': 7,
        'background_id': 4,
        'scale': 0.23,  # Немного уменьшили для лучшего размещения
        'positions': [
            {'x': 100, 'y': 350, 'rotation': 0},    # 1. Прошлое (левый низ)
            {'x': 150, 'y': 280, 'rotation': 0},    # 2. Настоящее (левый склон)
            {'x': 210, 'y': 220, 'rotation': 0},    # 3. Скрытые влияния (левый верх)
            {'x': 256, 'y': 180, 'rotation': 0},    # 4. Центр/Препятствие (верх подковы)
            {'x': 302, 'y': 220, 'rotation': 0},    # 5. Внешние факторы (правый верх)
            {'x': 362, 'y': 280, 'rotation': 0},    # 6. Действие (правый склон)
            {'x': 412, 'y': 350, 'rotation': 0},    # 7. Итог (правый низ)
        ],
        'card_meanings': [
            'Прошлое - корень ситуации',
            'Настоящее - текущие факторы', 
            'Скрытые влияния - незримые силы',
            'Центр/Препятствие - ключевая точка',
            'Внешние влияния - окружение',
            'Лучший подход - как действовать',
            'Итог - вероятный результат'
        ]
    },
    
    'love_triangle': {
        'name': 'Любовный треугольник',
        'description': 'Отношения и чувства (6 карт)',
        'card_count': 6,
        'background_id': 6,
        'scale': 0.20,  # Значительно уменьшили для исключения перекрытий
        'positions': [
            # Основной треугольник - правильная треугольная форма
            {'x': 256, 'y': 100, 'rotation': 0},    # 1. Вы (верхняя вершина треугольника)
            {'x': 140, 'y': 320, 'rotation': 0},    # 2. Партнёр (левый нижний угол)
            {'x': 372, 'y': 320, 'rotation': 0},    # 3. Ситуация/Третья сторона (правый нижний угол)
            
            # Дополнительные карты на сторонах и внутри треугольника
            {'x': 198, 'y': 210, 'rotation': 0},    # 4. Связь между вами и партнёром (левая сторона)
            {'x': 314, 'y': 210, 'rotation': 0},    # 5. Внешние влияния (правая сторона)
            {'x': 256, 'y': 320, 'rotation': 0},    # 6. Исход отношений (под треугольником)
        ],
        'card_meanings': [
            'Вы - ваши чувства и позиция',
            'Ваша любовь - объект ваших чувств',
            'Другой человек - третья сторона ситуации',
            'Главный вызов - основное препятствие',
            'Динамика отношений - связь между вами',
            'Внешние влияния - что воздействует извне'
        ]
    },
    
    'week_forecast': {
        'name': 'Прогноз на неделю',
        'description': 'События каждого дня недели (7 карт)',
        'card_count': 7,
        'background_id': 3,
        'scale': 0.18,  # Рассчитано для оптимального размещения 7 карт в ряд
        'positions': [
            # Все дни недели в одном ряду - оптимально рассчитанные позиции
            {'x': 51, 'y': 256, 'rotation': 0},     # Понедельник
            {'x': 119, 'y': 256, 'rotation': 0},    # Вторник
            {'x': 187, 'y': 256, 'rotation': 0},    # Среда
            {'x': 256, 'y': 256, 'rotation': 0},    # Четверг (центр)
            {'x': 324, 'y': 256, 'rotation': 0},    # Пятница
            {'x': 392, 'y': 256, 'rotation': 0},    # Суббота
            {'x': 460, 'y': 256, 'rotation': 0},    # Воскресенье
        ],
        'card_meanings': [
            'Понедельник - начало недели',
            'Вторник - развитие планов',
            'Среда - середина недели',
            'Четверг - завершение дел',
            'Пятница - окончание рабочих дней',
            'Суббота - отдых и восстановление',
            'Воскресенье - подготовка к новой неделе'
        ]
    },
    
    'year_wheel': {
        'name': 'Колесо года',
        'description': 'Прогноз на год по домам (12 карт)',
        'card_count': 12,
        'background_id': 7,
        'scale': 0.18,  # Оптимизированный размер для 12 карт
        'positions': calculate_circular_positions(
            count=12, 
            radius=197,  # Максимальный радиус для полного использования 512x512 области
            center_x=256, 
            center_y=256
        ),
        'card_meanings': [
            '1-й дом - Личность и характер',
            '2-й дом - Деньги и ресурсы', 
            '3-й дом - Общение и обучение',
            '4-й дом - Дом и семья',
            '5-й дом - Творчество и любовь',
            '6-й дом - Здоровье и работа',
            '7-й дом - Партнёрство и брак',
            '8-й дом - Трансформации',
            '9-й дом - Мировоззрение и путешествия',
            '10-й дом - Карьера и репутация',
            '11-й дом - Друзья и надежды',
            '12-й дом - Тайны и подсознание'
        ]
    }
}


def get_spread_config(spread_name: str) -> Dict:
    """
    Получить конфигурацию расклада по названию
    
    :param spread_name: Название расклада
    :return: Конфигурация расклада
    """
    config = SPREAD_CONFIGS.get(spread_name)
    if config is None:
        raise ValueError(f"Расклад '{spread_name}' не найден")
    return config.copy()


def get_available_spreads() -> Dict[str, str]:
    """
    Получить список доступных раскладов
    
    :return: Словарь {key: name} всех доступных раскладов
    """
    return {key: config['name'] for key, config in SPREAD_CONFIGS.items()}


def validate_spread_config(config: Dict) -> bool:
    """
    Валидация конфигурации расклада
    
    :param config: Конфигурация для проверки
    :return: True если конфигурация корректна
    """
    required_fields = ['name', 'card_count', 'background_id', 'scale', 'positions']
    
    for field in required_fields:
        if field not in config:
            raise ValueError(f"Отсутствует обязательное поле: {field}")
    
    # Проверяем соответствие количества позиций и карт
    if len(config['positions']) != config['card_count']:
        raise ValueError(f"Количество позиций ({len(config['positions'])}) "
                        f"не соответствует количеству карт ({config['card_count']})")
    
    # Проверяем корректность background_id
    if not 1 <= config['background_id'] <= 7:
        raise ValueError(f"background_id должен быть от 1 до 7, получен: {config['background_id']}")
    
    # Проверяем scale
    if not 0.1 <= config['scale'] <= 1.0:
        raise ValueError(f"scale должен быть от 0.1 до 1.0, получен: {config['scale']}")
    
    # Проверяем позиции
    for i, pos in enumerate(config['positions']):
        if 'x' not in pos or 'y' not in pos:
            raise ValueError(f"Позиция {i}: отсутствуют координаты x или y")
        
        # Координаты должны быть в пределах рабочей области 512x512
        if not 0 <= pos['x'] <= 512 or not 0 <= pos['y'] <= 512:
            print(f"⚠️ Предупреждение: позиция {i} выходит за рабочую область: ({pos['x']}, {pos['y']})")
    
    return True


# Проверяем все конфигурации при импорте
def _validate_all_configs():
    """Валидация всех конфигураций при импорте модуля"""
    for spread_name, config in SPREAD_CONFIGS.items():
        try:
            validate_spread_config(config)
        except Exception as e:
            print(f"⚠️ Ошибка в конфигурации {spread_name}: {e}")


# Автоматическая валидация
_validate_all_configs()

if __name__ == "__main__":
    print("📋 Тестирование модуля spread_configs.py")
    print("=" * 50)
    
    # Показываем все доступные расклады
    print("\n🎴 Доступные расклады:")
    spreads = get_available_spreads()
    for key, name in spreads.items():
        config = get_spread_config(key)
        print(f"   {key}: {name}")
        print(f"      Карт: {config['card_count']}, Фон: {config['background_id']}, Scale: {config['scale']}")
    
    # Тестируем функцию круговых позиций
    print("\n🎯 Тестирование круговых позиций:")
    circular_pos = calculate_circular_positions(4, 100, 256, 256)
    print("   4 позиции по кругу (радиус 100):")
    for i, pos in enumerate(circular_pos):
        print(f"      {i+1}: ({pos['x']}, {pos['y']})")
    
    # Проверяем конфигурации
    print(f"\n✅ Все {len(SPREAD_CONFIGS)} конфигураций прошли валидацию")
    print("\n🎯 Готов к генерации изображений!")
