"""
–¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ bot.py –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
"""
import sys
import os
import json
import tempfile
import importlib.util

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))


def test_bot_import():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –º–æ–¥—É–ª—å bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
    """
    print("üß™ –¢–µ—Å—Ç: –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è bot.py")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
        with tempfile.TemporaryDirectory() as temp_dir:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            original_dir = os.getcwd()
            
            try:
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
                os.chdir(temp_dir)
                
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π config.json —Å –≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è —Ç–µ—Å—Ç–æ–≤
                test_config = {
                    "telegram_bot_token": "123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    "openrouter_api_key": "sk-or-v1-test-key",
                    "bot_username": "@test_bot",
                    "model_name": "deepseek/deepseek-chat-v3-0324:free",
                    "max_message_length": 4096,
                    "max_response_tokens": 8000,
                    "temperature": 0.3
                }
                
                with open("config.json", "w", encoding="utf-8") as f:
                    json.dump(test_config, f, indent=4, ensure_ascii=False)
                
                # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ src
                src_path = os.path.join(os.path.dirname(__file__), '..', 'src')
                os.symlink(src_path, 'src')
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å bot –º–æ–¥—É–ª—å
                import bot
                
                print("‚úÖ –£–°–ü–ï–•: –ú–æ–¥—É–ª—å bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
                if hasattr(bot, 'run_bot'):
                    print("‚úÖ –£–°–ü–ï–•: –§—É–Ω–∫—Ü–∏—è run_bot –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print("‚ùå –û–®–ò–ë–ö–ê: –§—É–Ω–∫—Ü–∏—è run_bot –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
                
                if hasattr(bot, 'start_command'):
                    print("‚úÖ –£–°–ü–ï–•: –§—É–Ω–∫—Ü–∏—è start_command –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print("‚ùå –û–®–ò–ë–ö–ê: –§—É–Ω–∫—Ü–∏—è start_command –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
                
                if hasattr(bot, 'help_command'):
                    print("‚úÖ –£–°–ü–ï–•: –§—É–Ω–∫—Ü–∏—è help_command –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print("‚ùå –û–®–ò–ë–ö–ê: –§—É–Ω–∫—Ü–∏—è help_command –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
                
                if hasattr(bot, 'handle_message'):
                    print("‚úÖ –£–°–ü–ï–•: –§—É–Ω–∫—Ü–∏—è handle_message –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print("‚ùå –û–®–ò–ë–ö–ê: –§—É–Ω–∫—Ü–∏—è handle_message –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
                
                return True
                
            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
                os.chdir(original_dir)
                
    except ImportError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ê: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {type(e).__name__}: {e}")
        return False


def test_bot_syntax():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–∞ bot.py
    """
    print("\nüß™ –¢–µ—Å—Ç: —Å–∏–Ω—Ç–∞–∫—Å–∏—Å bot.py")
    
    bot_file = os.path.join(os.path.dirname(__file__), '..', 'src', 'bot.py')
    
    try:
        with open(bot_file, 'r', encoding='utf-8') as f:
            source_code = f.read()
        
        # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        compile(source_code, bot_file, 'exec')
        print("‚úÖ –£–°–ü–ï–•: –°–∏–Ω—Ç–∞–∫—Å–∏—Å bot.py –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
        
    except SyntaxError as e:
        print(f"‚ùå –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ {bot_file}:")
        print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.text.strip() if e.text else ''}")
        print(f"   –û—à–∏–±–∫–∞: {e.msg}")
        return False
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {e}")
        return False


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è bot.py\n")
    
    tests_passed = 0
    total_tests = 2
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    if test_bot_syntax():
        tests_passed += 1
    
    if test_bot_import():
        tests_passed += 1
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤: {tests_passed}/{total_tests}")
    
    if tests_passed == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        sys.exit(1)